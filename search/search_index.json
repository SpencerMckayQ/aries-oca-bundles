{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Aries OCA Bundles","text":"<p>This website (published from the Aries OCA Bundles GitHub repository) is human- and machine-readable registry of published Overlays Capture Architecture (OCA) Bundles to be used by Hyperledger Aries agents (issuers, holders and verifiers). The publishing process includes a lightweight governance process for ensuring those contributing to the repository are the \"authority\" over the OCA Bundles they submit/update, and that what they submit is, in fact, a valid OCA Bundle for a published Hyperledger AnonCreds Schema and/or Credential Definition. Once published, Aries agents following the OCA for Aries RFC guidance have an easy to implement process for finding, retrieving and using OCA Bundles for credentials that they need to display.</p> <p>The OCA Bundles should follow the rules for OCA for Aries RFC OCA Bundles, including the OCA for Aries Style Guide RFC. Each OCA Bundle must be accompanied by some metadata about the credential, such as on what ledger the credential schema and/or credential definition (CredDef) reside, and may be accompanied by the full OCA Source data--Excel and JSON files.  There are tools in the associated GitHub repository for converting OCA Source to the Bundle to make it easier for contributors.</p> <p>Currently, the repository assumes that the OCA Bundles are for Hyperledger AnonCreds Verifiable Credentials. We expect that other formats, such as W3C Verifiable Credentials Data Model Standard JSON-LD credentials will eventually also be supported.</p> <p>To see all of the OCA for Aries Bundles that have been published in this repository, use either the OCA Bundles tab, or the OCA Explorer tab. The OCA Bundles tab contains a page about each bundle in the repository, while the OCA Explorer tab provides a tool for experimenting with the branding of an OCA Bundle. Use the drop down to see/experiment with all the OCA Bundles in the registry, or upload your own OCA Bundle in the OCA Explorer to see how it will look.</p>"},{"location":"#contributing-an-oca-bundle","title":"Contributing an OCA Bundle","text":"<p>For information about contributing an OCA Bundle into the registry, please see the information in the Contributing section of this website.</p>"},{"location":"#using-these-oca-bundles-in-an-aries-agent","title":"Using these OCA Bundles in an Aries Agent","text":"<p>For information about using the OCA Bundles in this registry in an Aries Agent, please see the information in the Using OCA Bundles section of this website.</p>"},{"location":"OCABundles/schema/","title":"Credential OCA Bundles","text":""},{"location":"OCABundles/schema/la-games/california-mdl/","title":"California MDL","text":"<p>A verifiable credential schema for a California Mobile Driver's License</p>"},{"location":"OCABundles/schema/la-games/california-mdl/#identifiers","title":"Identifiers","text":"Identifier Location URL TZdSc1K7VBBCLX2JKXPrTN:2:california-dmv-mdl:1.5 bcovrin:test http://test.bcovrin.vonx.io:3707/tx/BCOVRIN_TEST/domain/2885599"},{"location":"OCABundles/schema/la-games/la-games-volunteer/","title":"Metro ID","text":"<p>A verifiable credential schema for a California Metro Identification Card</p>"},{"location":"OCABundles/schema/la-games/la-games-volunteer/#identifiers","title":"Identifiers","text":"Identifier Location URL TZdSc1K7VBBCLX2JKXPrTN:2:la-metro-volunteer-id:1.5 bcovrin:test http://test.bcovrin.vonx.io:3707/tx/BCOVRIN_TEST/domain/2882343"},{"location":"OCABundles/schema/la-games/metro-id/","title":"Metro ID","text":"<p>A verifiable credential schema for a California Metro Identification Card</p>"},{"location":"OCABundles/schema/la-games/metro-id/#identifiers","title":"Identifiers","text":"Identifier Location URL TZdSc1K7VBBCLX2JKXPrTN:2:la-metro-volunteer-id:1.5 bcovrin:test http://test.bcovrin.vonx.io:3707/tx/BCOVRIN_TEST/domain/2882343"},{"location":"OCABundles/schema/la-games/test-mdl/","title":"California MDL","text":"<p>A verifiable credential schema for a California Mobile Driver's License</p>"},{"location":"OCABundles/schema/la-games/test-mdl/#identifiers","title":"Identifiers","text":"Identifier Location URL TZdSc1K7VBBCLX2JKXPrTN:2:california-dmv-mdl:1.5 bcovrin:test http://test.bcovrin.vonx.io:3707/tx/BCOVRIN_TEST/domain/2885599"},{"location":"OCABundles/schema/la-games/test-w3c/","title":"California MDL","text":"<p>A verifiable credential schema for a California Mobile Driver's License</p>"},{"location":"OCABundles/schema/la-games/test-w3c/#identifiers","title":"Identifiers","text":"Identifier Location URL testw3ccredential bcovrin:test http://test.bcovrin.vonx.io:3707/tx/BCOVRIN_TEST/domain/2885599"},{"location":"contributing/OCABundleCreatePR/","title":"Creating in an OCA Bundle Pull Request","text":""},{"location":"contributing/OCABundleCreatePR/#introduction","title":"Introduction","text":"<p>This document explains how to turn your completed Overlays Capture Architecture (OCA) Bundle materials (Excel file, images, identifiers, etc.) into a Pull Request (PR) for the Aries OCA Bundles repository.</p>"},{"location":"contributing/OCABundleCreatePR/#who-should-use-this-guide","title":"Who Should Use This Guide?","text":"<ul> <li>Non-Developers: Should NOT use this guide. Rather, such users should use the document here to gather the required files (Excel, branding, images, etc.) and create a GitHub Issue requesting an OCA Bundle be created.</li> <li>The maintainers of the Aries OCA Bundles repository, and other developers comfortable with Git, Rust, <code>jq</code>, and <code>bash</code> can follow the instructions below to create an OCA Bundle PR.</li> </ul> <p>Given that intended audience, the instructions in this document are relatively terse, assuming readers won't need each step detailed.</p> <p>Below is an overview of the process:</p> <ul> <li>Gather Input Data</li> <li>Create or Update Folder Structure</li> <li>Set Up the README.md</li> <li>Add Watermarks (Optional)</li> <li>Generate the OCA JSON</li> <li>Open the Pull Request</li> </ul> <p>For questions or assistance, raise an issue on GitHub and we'll try to help.</p>"},{"location":"contributing/OCABundleCreatePR/#getting-started","title":"Getting Started","text":"<p>Do the steps you normally do when preparing to create a PR into a GitHub repo. Note that the Aries OCA Bundles repository has a DevContainer configuration that you may want to use.</p> <p>The steps might include:</p> <ul> <li>Forking the Aries OCA Bundles repository.</li> <li>Create a local clone.</li> <li>Create a dev branch on the local clone to prepare the PR.</li> </ul>"},{"location":"contributing/OCABundleCreatePR/#input-data","title":"Input Data","text":"<p>To start the process, we'll assume you have all the data collected using the OCA Bundle Creation process. Notably:</p> <ul> <li>The OCA Excel file completed for the Issuer and credential in question.</li> <li>The completed <code>branding.json</code> file, with an associated images.</li> <li>A list of people (names, emails) that are authorized to update the OCA Bundle.</li> <li>A list of the identifiers (usually <code>credDefId</code>s, but possibly <code>schemaId</code>s), their location (e.g. <code>CANdy Dev</code>, etc.).</li> <li>As needed for each identifier, the watermark text (ideally, in the multiple languages defined in the Excel file) to display when viewing credentials associated with those identifiers.</li> <li>The desired location (path to folder) of the OCA Bundle.</li> </ul> <p>If you want, you MAY include a file <code>testdata.csv</code> that is a comma separated values file containing credential test data that may be used by tools like OCA Explorer. It's a big help to have such a file. The file:</p> <ul> <li>Must have a list of the credential attributes on the first line of the file.</li> <li>Have at least one line of sample data.</li> </ul>"},{"location":"contributing/OCABundleCreatePR/#create-the-folder-for-your-oca-bundle","title":"Create The Folder For Your OCA Bundle","text":"<p>Once you have forked the Aries OCA Bundles repository, create the folder for your new OCA Bundle within the <code>OCABundles</code> folder. Your folder can be placed arbitrarily deep, with some rules for the first few levels.</p> <p><code>schema</code> is the (current) name for where credential OCA Bundles are to be placed. That name may soon change (<code>credential</code> is a better name...), and in the future, a parallel folder might be added for presentation request OCA Bundles.</p> <p>Below <code>schema</code> is a list of top level credential issuers (e.g., BC Gov), and within each, the sub-issuers (to any depth). As you add your OCA Bundle, feel free to add as many layers of (sub-)issuers as appropriate. For example, you might include:</p> <ul> <li>the issuing sub-organization,</li> <li>the type of credential,</li> <li>different versions (e.g., 1.0, 1.1, 2.0, etc.) of the type of credential,</li> <li>development, staging, and production versions of the credential.</li> </ul> <p>We'll soon be eliminating the need for different dev, staging and production versions of an OCA Bundle -- unless you really want them to be different.</p> <p>For each layer, you MUST add a <code>README.md</code> file in which the top level markdown header (first line, <code>#</code>) MUST be the name of the (sub-)issuer. The <code>README.md</code> file may optionally contain additional information about the (sub-)issuer. The requirement for the <code>README.md</code> and the markdown header is that when generating the GitHub Pages registry site, the required markdown header is extracted used for the site navigation.</p> <p>This hierarchy can be seen in the \"OCA Bundles\" tab of this registry.</p> <p>At the appropriate level, create the folder for the OCA Bundle. At this time, there MUST be a folder for each different <code>watermark</code> setting. As such, you MAY have to create multiple OCA Folders, each with (initially) the same data. We expect to fix this very soon!</p> <p>Once you have created the OCA Bundle folders, populate each with the following data:</p> <ul> <li>The Excel file. There MUST be exactly one Excel file per Bundle, and it SHOULD be named <code>OCA.xlsx</code>.</li> <li>The <code>branding.json</code> file.</li> <li>The images, if any associated with the <code>branding.json</code> file.</li> <li>The sample credential data file, if any.</li> </ul>"},{"location":"contributing/OCABundleCreatePR/#create-the-readmemd-file-for-the-oca-bundle","title":"Create the README.md File for the OCA Bundle","text":"<p>A README.md file for each OCA Bundle folder MUST be present and MUST include the information shown and described below. The hard and fast formatting requirements are in place because the file is processed by a script that generates two lists of all of the identifiers (<code>schemaId</code>s and <code>credDefId</code>s) and the OCA Bundles to which they are associated with. The lists are in the files ocabundles.json and ocabundleslist.json in the root of the (GitHub Pages) registry website and (for now) the root folder of the Aries OCA Bundles GitHub repository. These are the files loaded by wallets and the OCA Explorer tool so that they know what OCA Bundles are available.</p> <pre><code># &lt;TITLE&gt;\n\n&lt;DESCRIPTION&gt;\n\n- Publishing Organization: &lt;ORGANIZATION&gt;\n- Primary Contact Email Address: &lt;CONTACT EMAIL ADDRESS&gt;\n\n## Identifiers\n\n| Identifier                                 | Location  | URL         |\n| ------------------------------------------ | --------- | ----------- |\n| &lt;SCHEMA ID or CRED DEF ID&gt;                 | &lt;LEDGER&gt;  | &lt;URL&gt;       |\n\n## Authorization\n\nThe following are the GitHub IDs of those authorized to make substantive updates to the OCA Bundle.\n\n| OCA Bundle Contributors | GitHub ID   | Email Address            |\n| ----------------------- | ----------- | ------------------------ |\n| &lt;NAME&gt;                  | &lt;GITHUB ID&gt; | &lt;EMAIL ADDRESS&gt;          |\n</code></pre> <p>Everything not in <code>&lt;&gt;</code>s must be exactly as specified above (with one exception--see below). Everything in <code>&lt;&gt;</code>s MUST be populated as described below.</p> <p>The two markdown tables MAY have multiple lines. Multiple lines in the <code>Identifiers</code> table indicates that the same OCA Bundle is used for each of the objects identified in the first column. Multiple lines in the <code>Authorization</code> table is recommended so that multiple members of the submitters team may update the OCA Bundle.</p> <ul> <li><code>&lt;TITLE&gt;</code> MUST be the name of the credential type. No other line in the   file can have a single <code>#</code> prefix.</li> <li><code>&lt;DESCRIPTION&gt;</code> is extracted for display by tools for processing this repository (such as the OCA Explorer) and should describe the type of credential to which the OCA Bundle applies.</li> <li><code>&lt;ORGANIZATION&gt;</code> is extracted for display by tools for processing this repository (such as the OCA Explorer) and is the name of the organization that submitted the OCA Bundle.</li> <li><code>&lt;CONTACT EMAIL ADDRESS&gt;</code> is an email address for the primary contact for the OCA Bundle. The address may for a person, or better, a group contact withing the <code>&lt;ORGANIZATION&gt;</code>.</li> <li><code>&lt;SCHEMA ID or CRED DEF ID&gt;</code> are identifiers for objects to which the OCA Bundles applies. There can be multiple lines in the table, each with a different identifier. Each MUST use exactly the same OCA Bundle, including the watermark (present or not),</li> <li><code>&lt;LEDGER&gt;</code> is optional. It identifies the ledger on which the object identified by the object resides. It should be in the form <code>&lt;network&gt;[:&lt;instance&gt;]</code> as defined in the did-indy specification for <code>namespace</code> -- e.g., <code>candy:dev</code> or <code>sovrin</code>. The value is useful when the <code>&lt;SCHEMA ID or CRED DEF ID&gt;</code> is unqualified (such as with legacy Indy identifiers) such that the precise location of the object is not known.</li> <li><code>&lt;URL&gt;</code> is optional and is a plain (non-Markdown) link to a ledger browser   instance of the object, such as to a transaction on   https://indyscan.io,   http://test.bcovrin.vonx.io:3707 or   https://candyscan.idlab.org/</li> <li><code>&lt;NAME&gt;</code> is the name of a person authorized to update the OCA Bundle and related data. There may be multiple rows in the markdown table to name multiple people.</li> <li><code>&lt;GITHUB ID&gt;</code> is the GitHub ID of the named person.</li> <li><code>&lt;EMAIL ADDRESS&gt;</code> is the email address of the named person</li> </ul> <p>The <code>&lt;CONTACT EMAIL ADDRESS&gt;</code> and the Authorization table are to ensure that once the OCA Bundle is submitted, there are contacts available to answer questions about, and to submit updates to, the OCA Bundle.</p> <p>The contents of the <code>Authorization</code> section (following the <code>## Authorization</code> line) may be replaced with the following to avoid repeating the same contents in every OCA Bundle <code>README.md</code> file:</p> <p><code>The Authorization table for this OCA Bundle is in [this file](&lt;path-to-another-OCABundle-folder/README.md).</code></p>"},{"location":"contributing/OCABundleCreatePR/#adjusting-the-brandingjson-file","title":"Adjusting the <code>branding.json</code> File","text":"<p>The <code>branding.json</code> file(s) may need some adjustments in the paths to the images that are included in the OCA Bundles folder. We hope to automate this step soon, but for now it is a manual step.</p> <p>If the <code>branding.json</code> files contain the URL for the image that is in the OCA Bundle folder, edit the URL to be the correct path to that image in the current folder. Specifically, set the image path value to the following, a three part string defined below.</p> <p><code>https://raw.githubusercontent.com/bcgov/aries-oca-bundles/main/&lt;path-to-OCA-Folder&gt;/&lt;image-file-name&gt;</code></p> <ul> <li>The first part (up to <code>main/</code>) is the standard GitHub hard coded path to a <code>raw</code> file on the <code>main</code> branch of the repository.</li> <li>The second is the path to the folder in the repository, starting with <code>OCABundles</code> and ending with this OCA Folder name (e.g., <code>OCABundles/schema/bcgov-digital-trust/LCRB/selling-it-right</code>).</li> <li>The third part is the image file name (e.g., <code>bc-logo.jpg</code>)</li> </ul>"},{"location":"contributing/OCABundleCreatePR/#adding-the-watermarks","title":"Adding the Watermarks","text":"<p>While we plan to soon move the injection of the <code>watermark</code> value into the generation process, it is currently a manual step requiring the editing of the Excel file. For each OCA Bundle where a watermark is required:</p> <ul> <li>Edit the Excel file</li> <li>On each language tab (e.g. <code>en</code> and <code>fr</code>), add the value <code>watermark</code> in the first empty row in Column A, and put the language-specific watermark file in the same row, Column B.</li> <li>If there is no watermark associated with an identifier, do not edit the Excel file. The default is no watermark.</li> <li>Save the Excel file.</li> </ul>"},{"location":"contributing/OCABundleCreatePR/#generating-the-oca-bundle-json-file-from-source","title":"Generating the OCA Bundle JSON File from Source","text":"<p>A bash script <code>genBundle.sh</code> can be found in the <code>scripts</code> folder of the Aries OCA Bundles GitHub repository that generates the OCA Bundle JSON file. To use it, you will need to install a few prerequisites--<code>jq</code> and the OCA Excel Parser (a Rust binary).</p>"},{"location":"contributing/OCABundleCreatePR/#prerequisites","title":"Prerequisites","text":"<p>Developers will likely have the <code>jq</code> (JSON Query) command line utility already installed. If not, follow the JQ installation instructions. Once installed, make sure <code>jq</code> is on your path.</p> <p>Installing the OCA Excel Parser is a little (OK, a lot) more involved, as you need Rust (and more) installed on your machine. Here are the steps:</p> <ul> <li>Clone a local copy of the OCA Excel Parser repository.</li> <li>If you don't have Rust installed on your machine, following the Rust Installation Instructions, including installing all necessary dependencies.</li> <li>Follow the instructions in the repository README.md to build the parser. Currently it is just to execute <code>cargo build</code>.</li> <li>Copy the resulting executable to a directory on your PATH, e.g., <code>cp target/debug/parser ~/bin/</code></li> </ul>"},{"location":"contributing/OCABundleCreatePR/#running-the-generator-script","title":"Running the Generator Script","text":"<p>Assuming you are in an OCABundles folder you can run the script with a relative path, such as:</p> <p><code>../../../scripts/genBundle.sh</code></p> <p>We recommend you create a symbolic link to that script in a directory on your PATH to make it easier to use.</p> <p>The script checks to see that the pre-requisites (<code>jq</code> and <code>parser</code>) are available and executable, erroring off it not, and, if run without arguments, prints a usage message. Currently the <code>-x &lt;excel file&gt;</code> is required, and you can supply zero or more JSON files to be added to the OCA Bundle produced from processing the Excel file. The typical command line is:</p> <p><code>genBundle.sh -x OCA.xlsx branding.json</code></p> <p>If all goes well, an <code>OCABundle.json</code> file will be created.</p> <p>Repeat the generation process for each OCA Bundle you are creating (e.g., per unique watermark value).</p>"},{"location":"contributing/OCABundleCreatePR/#creating-the-pr","title":"Creating the PR","text":"<p>Once you have successfully generated the OCA Bundle JSON files, you are ready to submit the PR.</p> <ul> <li>Review the files you will be adding to the repository -- make sure there is nothing beyond the OCA Folders and contents you intend to add.</li> <li>Add the files to your local clone and commit them with an appropriate comment.</li> <li>Push the development branch and create the PR.</li> </ul> <p>The PR MUST be reviewed by an OCA Maintainer, and SHOULD be approved by whomever requested the PR in the first place.</p> <p>Assuming all goes well, your PR will be approved and merged.  Updates to the OCA Bundle(s) would follow a similar path, save the creation of the OCA Folders.</p>"},{"location":"contributing/OCABundleCreation/","title":"OCA Bundle Creation","text":"<p>An OCA (Overlays Capture Architecture) Bundle allows verifiable credential issuers to customize the display of their credential, managing translations, branding, attribute rendering, etc. The image belows shows an example of a verifiable credential displayed without an OCA Bundle, and the same credential with an OCA Bundle, first in English and then in French. OCA Bundles are used by mobile wallets, such as those built on the OpenWallet Foundation's Bifold Wallet.</p> <p></p> <p>Creating an OCA Bundle from scratch consists of a two parts.</p> <ul> <li>Creating the information needed to create the OCA Bundle for submitting a GitHub Issue in the Aries OCA Bundles repository to have the OCA Bundle created. This is usually handled by an Issuer team member, often a designer, collaborating with translation experts. This part is covered in this document.</li> <li>The (quite technical) process of submitting a GitHub Pull Request (PR) to publish the OCA Bundle and make it available to Wallets. Since the process is quite technical, feel free to stop at the \"Create Issue\" part, and we (the maintainers of the Aries OCA Bundles repo) will take it from there -- getting an approval from the Issuer team along the way. The instructions for the second part are in the Create the OCA Bundle PR document.</li> </ul> <p>So, to get as far as creating a GitHub Issue, here's a summary of what you are going to do:</p> <ul> <li>Create the OCA Bundle source data using Excel, the OCA Explorer site and a text editor, including identifying the logo, images and other branding data.</li> <li>Gather the identifiers (schemaId or credDefId) for the credential to which the bundle applies.</li> <li>Define where in the Aries OCA Bundles repository the OCA Bundle should be placed.</li> <li>Create a GitHub Issue in the Aries OCA Bundles repository, attaching the files and information about the new OCA Bundle.</li> </ul> <p>We'll cover each steps in the following sections.</p>"},{"location":"contributing/OCABundleCreation/#collect-the-oca-bundle-source-data","title":"Collect the OCA Bundle Source Data","text":"<p>To get started, you (the Issuer) will need to collect some basic information about the credential for which you are building an OCA Bundle. If you are not familiar with how you can control the display of a credential using an OCA Bundle, please take a look at the result of applying OCA Bundles to existing credentials, by going to the OCA Explorer tab of this website. There, you can select and review the existing credentials, and see how others have used OCA for their credentials. You should also review the OCA for Aries Style Guide. It has the details about what you can control in displaying your credential, and Do's and Don'ts as you create your bundle.</p> <p>Once you have an idea of what you are going to be doing, you need to gather some data:</p> <ul> <li>The list of attributes and their data types in the credential. That will usually come from the technical team creating the credential issuer software. The attribute names must match exactly what is in the schema for the credential type.</li> <li>The images that you want to use in displaying your credential -- a logo, background image and a background image slice. Guidelines for, and how the images will be used, are below.</li> <li>The colours (or colors) you want to use for the credential -- a primary and secondary, in RGB hex format.</li> </ul> <p>You will (later) use the OCA Explorer to experiment with your images and colours as you adjust them to be just right.</p> <p>Note</p> <p>In most cases, you only create one OCA Bundle for a credential that your organization Issues, and use it for the Dev, Test and Production sites. Often, a watermark is added to differentiate a \"Test\" credential from a production one -- the addition of the watermark is covered in the later creating the PR part of the process. However, you want to have different OCA Bundles for Dev/Test and Production beyond the just the watermark difference. If you do, please create multiple OCA Bundles, identifying the target environment for each. It adds management overhead, but that's all. It's up to you.</p>"},{"location":"contributing/OCABundleCreation/#create-the-oca-excel-file","title":"Create the OCA Excel File","text":"<p>Next up is to populate an Excel spreadsheet with the core and language-specific information about your credential type. Start by downloading this OCA Excel File that you will save locally and then populate with details about your credential. You can name the local file whatever you want. Open up the file in Excel and use the instructions in the file to populate the document for your credential. Here is a quick summary of the process, thoroughly documented in the Excel file (<code>Documentation</code> tab):</p> <ul> <li>On the \"Main\" tab, enter a list of the attributes, their data types, and a flag indicating if an attribute is Personally Identifiable Information (PII).</li> <li>On the language tabs (\"en\" and \"fr\"), add in language-specific data about the Credential (name, description, Issuer, etc.), and a label and description about each pre-populated credential attribute. Other languages can be added/removed.</li> </ul> <p>That's it. Save the Excel file and you are good to go. Right now, we don't have a good way to test the Excel file before it goes into the Aries OCA Bundles repository.  We hope to add that soon.</p> <p>If you want to update the Excel file after it has been put (merged) into the Aries OCA Bundles repository, make sure you download the latest version of the file from the repository before editing, so you don't lose any edits others may have made. Your local copy may not be the latest!</p>"},{"location":"contributing/OCABundleCreation/#generate-the-branding-json-file","title":"Generate The Branding JSON File","text":"<p>The second file you need to create is the <code>branding.json</code> file. The easiest way to create the file is to use the OCA Explorer. Unfortunately, doing that is a bit of a hack, but bear with us. We hope to have a smoother process soon.</p> <p>The first step is to get the colors, logo, and images right. To do that, we'll use another credential's OCA Bundle, ignoring the attribute names and focusing on the appearance.</p> <p>To do that:</p> <ul> <li>Loop:<ul> <li>Create/retrieve/update the logo and other images to be used in the OCA Bundle.<ul> <li>Make sure in creating/adjusting the images that you use the size guidelines in the OCA for Aries Style Guide RFC. We don't want massive image files -- they need to be as small (in bytes) as possible. In summary:<ul> <li>Logo: 1:1 aspect ratio, 240x240px</li> <li>Background Image Slice: 1:10 aspect ratio, 120x1200px</li> <li>Background Image: 3:1 aspect ratio, 360x1080px</li> </ul> </li> </ul> </li> <li>Go to the OCA Explorer Tab, and load any existing OCA Bundle.<ul> <li>Ignore the attribute names (since they don't match your credential...) -- focus on the colors and images.</li> </ul> </li> <li>Use the form at the bottom of the page (image below) and:<ul> <li>Load the your images.<ul> <li>You can either use URLs for the images or upload them into the form.</li> <li>You might upload them while you are iterating, and then use URLs when you are finished.</li> </ul> </li> <li>Use the color picker to select the primary/secondary background colors appropriate for your Issuer.</li> <li>Ignore (for now) the primary/secondary attributes.</li> </ul> </li> </ul> </li> <li>Repeat until you have the logo, images and colors Just Right.</li> <li>Download the Branding JSON file (<code>branding.json</code>) using the button at the bottom of the screen.</li> </ul> <p>The OCA Explorer Branding form:</p> <p></p> <p>Here's what the file will look like. Two things to note:</p> <ul> <li>If you uploaded the images in the OCA Explorer and left them as is, those fields will be VERY long. That's a valid approach to handling the images, or you can change them as noted below.</li> <li>If you an attribute in the credential that holds the \"Issued Date\", and/or the \"Expiry Date\", type in the names of those attributes as value of the respective data elements (<code>\"issued_date_attribute\"</code>, <code>\"expiry_date_attribute\"</code>) below.</li> </ul> <pre><code>{\n  \"capture_base\": \"\",\n  \"type\": \"aries/overlays/branding/1.0\",\n  \"digest\": \"\",\n  \"logo\": \"https://raw.githubusercontent.com/bcgov/aries-oca-bundles/main/OCABundles/schema/bcgov-digital-trust/LCRB/selling-it-right-showcase/bc-logo.jpg\",\n  \"background_image_slice\": \"https://www.responsibleservicebc.gov.bc.ca/files/static/bc_wallet_vc_lcrb_image_slice_sell_right.jpg\",\n  \"background_image\": \"https://www.responsibleservicebc.gov.bc.ca/files/static/bc_wallet_vc_lcrb_background_image_sell_right.jpg\",\n  \"primary_background_color\": \"#003366\",\n  \"secondary_background_color\": \"#fcbc1e\",\n  \"primary_attribute\": \"given_names\",\n  \"secondary_attribute\": \"family_name\",\n  \"issued_date_attribute\": \"\",\n  \"expiry_date_attribute\": \"\"\n}\n</code></pre> <p>To finalize the <code>branding.json</code> file:</p> <ul> <li>Load the downloaded file into a text editor, and:<ul> <li>If needed, update the values for the images:<ul> <li>If you intended to upload the images into the Aries OCA Bundles repository, set the image attribute values to just the file name without a path (e.g., \"IssuerLogo.png\").</li> <li>If you intend to use a remote URL for the images, enter the URL.</li> </ul> </li> <li>Enter the primary and secondary credential attribute names specific to your credential.</li> <li>If applicable, enter the \"issued_date_attribute\" and/or \"expiry_date_attribute\" names.</li> </ul> </li> <li>Save the <code>branding.json</code> file.</li> </ul>"},{"location":"contributing/OCABundleCreation/#submit-your-oca-bundle-as-an-issue","title":"Submit Your OCA Bundle As An Issue","text":"<p>We are now ready to create the first iteration of the OCA Bundle. Please create an Issue in the GitHub Aries OCA Bundles repository using the instructions below, and we (the Maintainers of the Aries OCA Bundles repo) will take it from there. We're happy to do that, and you will be able to approve the PR before it is merged into the repository. Once the PR is created and merged, we're happy for you to requests tweaks to the OCA Bundle via issues or PRs -- submitting updates to the Excel file, branding file or other information about the OCA Bundle.</p> <p>Here's how to create the Issue.</p> <ul> <li>Click here to create a new GitHub Issue in the right repo.</li> <li>Call the issue \"New OCA Bundle for Credential <code>&lt;NAME&gt;</code> from Issuer <code>&lt;Issuer&gt;</code>\"</li> <li>In the description, include:<ul> <li>A brief background of the request -- the project, and desired timeline for the OCA Bundle to be available in the Wallet.</li> <li>Propose where the OCA Bundle should go in the existing data structure. Likely that will be determined by the Issuer organization name, and the credential type. For example, \"Within the BC Gov folder, in an LSBC folder and called \"Lawyer\".</li> <li>A list of names and email addresses of those that will be authorized to make/approve updates to the Bundle. Include your name and email, please.</li> <li>Attach at least the OCA Excel file and branding.json files.</li> <li>Attach the images that you want put into the OCA Bundle folder. If the images are embedded in the <code>branding.json</code> file, or are URLs to remote image files, the images need not be attached.</li> </ul> </li> <li>If you know the following information, enter it in the description. Alternatively, you might ask a technical resource on your team that has this information to enter it into a comment on the Issue.<ul> <li>The <code>credDefId</code>s (and/or <code>schemaID</code>s) associated with the OCA Bundle. For each:<ul> <li>Include the location of the ID (e.g. \"CANdy Dev\", \"CANdy Test\", etc.).</li> <li>Include the text of a \"watermark\", if any, for each Identifier, and in each desired language (e.g., English, French, etc.). For example: \"TEST\".</li> </ul> </li> </ul> </li> </ul> <p>That's it.  We'll take it from there, using the Issue comments (or, email or, gasp the phone) to get any more details/clarifications we might need. We'll be back to you within a business day of submitting the issue with a progress report and/or questions -- ideally to say \"all done\". Our team will use your materials to create a PR. We\u2019ll tag you in the PR for review, and once approved, we\u2019ll merge the changes. The OCA Bundle will then become available in your wallet. After that, Issues or PRs (or emails) can be used to adjust the OCA Bundle as necessary based on testing with a Wallet.</p>"},{"location":"using/usingOCABundles/","title":"Using OCA Bundles","text":"<p>The information published on this website is for both human consumption and machine readable processing by Aries Agents. This page describes how Aries Agents can use the JSON index files and OCA Bundles published in this registry.</p>"},{"location":"using/usingOCABundles/#aries-agent-processing","title":"Aries Agent Processing","text":"<p>The following are the steps for processing an OCA Bundle by an Aries Holder or Verifier.</p> <p>An Aries holder (wallet) or verifier agent MUST be pre-configured with the following URL (referenced as <code>&lt;URL&gt;</code> in the guidance that follows) for accessing the raw JSON files published as part of this registry:</p> <ul> <li><code>https://bcgov.github.io/aries-oca-bundles/</code></li> </ul> <p>Here is how the resources published on this site are to be used by an Aries Agent:</p> <ul> <li>On startup, and periodically thereafter, load the ocabundles.json JSON index file found at <code>&lt;URL&gt;/ocabundles.json</code>.</li> <li>See the guidance below on caching the resources (index file and OCA Bundles) published on this site.</li> <li>On receipt of an AnonCreds Credential Definition (via either an [Issue Credential] or [Present Proof] protocol):</li> <li>Extract the <code>credDefId</code> and <code>schemaId</code> from the Credential Definition.</li> <li>Scan for the <code>credDefId</code> and <code>schemaId</code> in the index of OCA Bundles in the loaded ocabundles.json data structure.</li> <li>If found, extract the corresponding <code>path</code> item value from the ocabundles.json data structure entry.<ul> <li>If entries for both identifiers are found, use the <code>credDefId</code> entry.</li> </ul> </li> <li>Load and use the OCA Bundle for the credential at <code>&lt;URL&gt;/&lt;path&gt;</code>.</li> <li>If not found, proceed without an OCA Bundle for the credential.</li> </ul> <p>The use of the OCA Bundle (or proceeding without an OCA Bundle) is defined in the [OCA for Aries RFC], and the [OCA for Aries Style Guide RFC].</p>"},{"location":"using/usingOCABundles/#caching-the-index-and-oca-bundles","title":"Caching the Index and OCA Bundles","text":"<p>The Aries wallet/agent may cache the loaded ocabundles.json JSON file and OCA Bundles. The following guidance should be followed:</p> <ul> <li>The ocabundles.json JSON file should have a relatively short \"time to   live\" (TTL) in the cache so that   updates to the published data are regularly received. The TTL should be no   more than 24 hours. Further, if the loading of an OCA Bundle based on a path   in the ocabundles.json data structure fails, the ocabundles.json should be   re-retrieved and the operation tried again.</li> <li>Updates to the ocabundles.json content might include:<ul> <li>New paths for individual or all OCA Bundle files.</li> <li>Added OCA Bundles.</li> <li>Updated OCA Bundles.</li> </ul> </li> <li>The <code>sha256</code> value provided in the ocabundles.json data structure is a hash over the OCA Bundle itself. It should be used to know when to invalidate the caching of an OCA Bundle, and a new version received.</li> <li>Cache with the OCA Bundle, the <code>sha256</code> value.</li> <li>When an OCA Bundle is needed, check if the <code>sha256</code> value from the ocabundles.json data structure matches the cached value.<ul> <li>If the values match, the cached OCA Bundle is up to date.</li> <li>If the values differ, delete the cached OCA Bundle and retrieve the latest OCA Bundle from the published site.</li> </ul> </li> </ul> <p>Although the wallet/agent need not ever calculate the <code>sha256</code> value to verify it, for reference, it is calculated using the Unix <code>shasum</code> utility using the command line options: <code>shasum -a256 -U &lt;path_to_OCABundle&gt;</code>. The <code>sha256</code> values are re-calculated as part of the ocabundles.json generation process executed every time the registry is updated via a merged pull request to the Aries OCA Bundles GitHub repository, the source of this registry.</p>"}]}